"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import branchcreaterequestendpointoptions as shared_branchcreaterequestendpointoptions
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from neon_api import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BranchCreateRequestBranch:
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The branch name"""
    parent_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent_id'), 'exclude': lambda f: f is None }})
    r"""The `branch_id` of the parent branch"""
    parent_lsn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent_lsn'), 'exclude': lambda f: f is None }})
    r"""A Log Sequence Number (LSN) on the parent branch. The branch will be created with data from this LSN."""
    parent_timestamp: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent_timestamp'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""A timestamp identifying a point in time on the parent branch. The branch will be created with data starting from this point in time."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BranchCreateRequest:
    
    branch: Optional[BranchCreateRequestBranch] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('branch'), 'exclude': lambda f: f is None }})
    endpoints: Optional[list[shared_branchcreaterequestendpointoptions.BranchCreateRequestEndpointOptions]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endpoints'), 'exclude': lambda f: f is None }})
    