"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from neon_api import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProjectConsumption:
    
    active_time_seconds: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active_time_seconds') }})
    r"""Seconds. Control plane observed endpoints of this project being active this amount of wall-clock time.
    The value has some lag.
    The value is reset at the beginning of each billing period.
    """
    compute_time_seconds: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compute_time_seconds') }})
    r"""Seconds. The number of CPU seconds used by the project's compute endpoints, including compute endpoints that have been deleted.
    The value has some lag. The value is reset at the beginning of each billing period.
    Examples:
    1. An endpoint that uses 1 CPU for 1 second is equal to `compute_time=1`.
    2. An endpoint that uses 2 CPUs simultaneously for 1 second is equal to `compute_time=2`.
    """
    data_storage_bytes_hour: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_storage_bytes_hour') }})
    r"""Bytes-Hour. Project consumed that much storage hourly during the billing period. The value has some lag.
    The value is reset at the beginning of each billing period.
    """
    data_transfer_bytes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_transfer_bytes') }})
    r"""Bytes. Egress traffic from the Neon cloud to the client for given project over the billing period.
    Includes deleted endpoints. The value has some lag. The value is reset at the beginning of each billing period.
    """
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The project ID"""
    synthetic_storage_size: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('synthetic_storage_size') }})
    r"""Bytes. Current space occupied by project in the storage. The value has some lag."""
    updated_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""A timestamp indicating when the project was last updated"""
    written_data_bytes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('written_data_bytes') }})
    r"""Bytes. Amount of WAL that travelled through storage for given project across all branches.
    The value has some lag. The value is reset at the beginning of each billing period.
    """
    